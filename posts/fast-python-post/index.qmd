---
title: "Fast Python Workshop"
description: "Do you have performance problems with your Python code? The 4-day fast Python workshop offered by the Scientific IT Services at ETH will help you to identify these problems and introduce you to different techniques and tools to solve them on your local machine or on a high performance computing cluster. To familiarise interested people with the course content of the workshop, Dr. Franziska Oschmann from the Scientific IT Services will give a short Z'Morge session at RSEED in the KOF Lab on 30 May 2024."

author: "Minna Heim"
date: "04/21/2024"
categories:
    - research software engineering
    - python
    - ETH
    - scientific IT services
---

### Teaser

**When:** (tbd) \
**Where:** on-site at ETH Zurich \
**How much:** 400 CHF per attendee \

The team of Scientific IT Services at ETH Zurich is organising the four-day fast-python workshop to help interested people, from PhD students or scientific staff working with Python and wanting to optimise their code, to people who have been working with Python for a while and want to improve their skills, or to help you solve performance issues when writing Python code to run it on your local computer or a high performance computing cluster.

## Goals: 
The course is aimed at people who are already familiar with Python and want to improve the performance of their code. It will cover the basics of profiling and optimising in Python, and introduce you to some of the most common tools and techniques. It will also provide some best practices for writing fast and efficient Python code. Below are the core topics covered in the 4-day workshop.

We introduce advanced topics, but do not provide a deep dive into them. Instead, we raise awareness of existing solutions and teach best practices so that attendees can acquire the basic skills to tackle performance-related programming problems.

## Core Topics 
- Profiling
- Concepts 
- Optimization
- Paralell computing (PC and on an HPC and Euler Cluster)

## Non-Goals
- Have you been programming in Python for more than a year?
- Have you ever experienced performance issues in your Python code?
- Are you interested in running Python code on high-performance-computing clusters (such as ETH's Euler cluster)?

## Profiling example

The following function `count_common` takes two lists `data_1` and `data_2` and counts how many elements both have in common. This is a simple and slightly unrealistic example, but good enough to show and explain a few fundamental principles of profiling and optimization. 

```bash
def count_common(data_1, data_2):
    """counts how many items data_1 and data_2 have in common"""
    matches = 0
    for value in data_1:
        if value in data_2:
            matches += 1
    return matches  
```

```bash    
print(count_common([10, 20, 30], [20, 30, 40, 50])) 
```
 
This looked good! We got the result immediately. But how fast is `count_common` for larger inputs? To measure runtime we can use the `time` function from the `time` module from the Python standard library.

```bash
started = time.time()
print("I sleep now for 1.23 seconds")
time.sleep(1.23)
print("Measured execution time is", time.time() - started)
```
We will now use this setup to measure the used time for larger inputs and optimize the code.

## RSEED Workshop as teaser 

Since the workshop is not free and requires 4 days worth of committment, we want to offer the introduction to fast-python as an RSEED workshop, to give interested participants a chance to discover the content of the course and decide if they want to commit to the full course.

## Links

[2023 Fast Python Workshop](https://sis.id.ethz.ch/services/consultingtraining/fast_python_workshop.html) | [Scientific IT Services](https://sis.id.ethz.ch) 
